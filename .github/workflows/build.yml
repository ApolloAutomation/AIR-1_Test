name: Build
env:
  DEVICE_NAME: AIR-1
  RELEASE_URL: ${{ github.server_url }}/${{ github.repository }}/releases/latest

on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: "0 5 * * 1"

jobs:
  build:
    name: Build And Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Firmware
        uses: esphome/build-action@v3.0.0
        id: esphome-build
        with:
          yaml_file: Integrations/ESPHome/${{ env.DEVICE_NAME }}.yaml
          version: 'latest'
          cache: true

      - name: Read version from YAML file
        id: read_version
        run: |
          version=$(grep 'substitutions_version:' Integrations/ESPHome/${{ env.DEVICE_NAME }}.yaml | awk '{print $2}' | tr -d '"')
          echo "project_version=$version" >> $GITHUB_ENV

      - name: Move generated files to output
        run: |
          mkdir -p output
          mv ${{ steps.esphome-build.outputs.name }}/* output/
          echo ${{ steps.esphome-build.outputs.version }} > output/version
          
          # Extract MD5 checksum of firmware.ota.bin
          MD5_CHECKSUM=$(md5sum output/firmware.ota.bin | awk '{ print $1 }')
          
          # Update manifest.json with jq
          jq --arg name "${{ env.DEVICE_NAME }}" \
              --arg version "${{ env.project_version }}" \
              --arg md5 "$MD5_CHECKSUM" \
              '. | {name: $name, version: $version, home_assistant_domain: "esphome", new_install_prompt_erase: false, builds: [{chipFamily: "ESP32-C3", parts: [{path: "firmware-factory.bin", offset: 0}]}, {chipFamily: "ESP32-C3", ota: {path: "firmware.ota.bin", md5: $md5}}]}' \
              output/manifest.json > output/manifest_temp.json
          mv output/manifest_temp.json output/manifest.json
      - uses: actions/upload-artifact@v4.3.3
        with:
          name: build-${{ env.DEVICE_NAME }}
          path: output
          retention-days: 1


      - name: Create Release
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.project_version }}
          release_name: "Release ${{ env.project_version }}"
          body: "Release of version ${{ env.project_version }}"
          draft: false
          prerelease: false
  
      - name: Upload firmware.factory.bin to Release
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/${{ env.DEVICE_NAME }}/firmware-factory.bin
          asset_name: firmware-factory.bin
          asset_content_type: application/octet-stream

      - name: Upload firmware.ota.bin to Release
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: output/${{ env.DEVICE_NAME }}/firmware.ota.bin
          asset_name: firmware.ota.bin
          asset_content_type: application/octet-stream
      
      
      - uses: actions/upload-artifact@v4.3.3
        with:
          name: build-${{ env.DEVICE_NAME }}
          path: output
          retention-days: 5

  deploy:
    if: contains(fromJSON('["workflow_dispatch", "push", "schedule"]'), github.event_name) && github.ref == 'refs/heads/main'
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
